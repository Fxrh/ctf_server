#!/usr/bin/env python3
"""
DBUS daemon to manage users for the CTF server
"""

import gobject

import dbus
import dbus.service
import dbus.mainloop.glib

import subprocess

class CTFServer(dbus.service.Object):
    def __init__(self, bus, object_path):
        dbus.service.Object.__init__(self, bus, object_path)
        
    @dbus.service.method(dbus_interface='de.fxrh.ctfserver',
                         in_signature='', out_signature='s')
    def hello(self):
        return "Hello, World!"
    
    @dbus.service.method(dbus_interface='de.fxrh.ctfserver',
                         in_signature='i', out_signature='b')
    def addServiceAccount( self, service_id ):
        try:
            service_id = int(service_id)
            a=subprocess.call(["useradd", "-mUK", "UMASK=077", "ctf-"+str(service_id)])
            if a != 0:
                return False
            
        except Exception as e:
            print(e)
            return False
        return True
    
    @dbus.service.method(dbus_interface='de.fxrh.ctfserver',
                         in_signature='s', out_signature='b')
    def setServiceKeys( service_id, keys ):
        try:
            service_id = int(service_id)
            os.makedirs("/home/ctf-"+str(service_id)+"/.ssh", exist_ok=True)
            with open("/home/ctf-"+str(service_id)+"/.ssh/authorized_keys", "w") as f:
                f.write(keys)
        except Exception as e:
            print(e)
            return False
        return True
    

def main():
    dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)

    system_bus = dbus.SystemBus()
    name = dbus.service.BusName("de.fxrh.ctfserver", system_bus)
    object = CTFServer(system_bus, '/CTFServer')

    mainloop = gobject.MainLoop()
    mainloop.run()
    
if __name__ == '__main__':
    main()

